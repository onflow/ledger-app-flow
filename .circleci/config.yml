# todo: add jobs to build and test on MacOS (in addition to the existing Linux build and test); see https://circleci.com/docs/2.0/hello-world-macos/
version: 2
jobs:
  build:
    # todo: refactor this to be a machine build, more similar to building from MacOS or Linux
    docker:
      - image: zondax/circleci@sha256:37f78ab294b35a055768c2305b3f13813e55fb9db4e65f72745ede61dd842c08
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: apt-get update && apt-get -y install python3.6 && apt -y install python3-pip && pip3 install conan
      # https://stackoverflow.com/questions/2670121/using-cmake-with-gnu-make-how-can-i-see-the-exact-commands
      - run: cmake -DCMAKE_BUILD_TYPE=Debug . && make VERBOSE=1
      # Unfortunately need to disable leak sanitizer https://github.com/google/sanitizers/issues/916
      # Still run all other ASAN components
      - run: GTEST_COLOR=1 ASAN_OPTIONS=detect_leaks=0 ctest -VV

  build_ledger:
    machine:
      image: ubuntu-1604:201903-01
      # see https://circleci.com/docs/2.0/docker-layer-caching/
      docker_layer_caching: true
    environment:
      #- BOLOS_SDK_IGNORE=/home/zondax/project/deps/nanos-secure-sdk
      #- BOLOS_ENV_IGNORE=/opt/bolos
    steps:
      - checkout
      # Docker entrypoint is not considered
      - run:
          name: Install node + yarn
          command: |
            source /opt/circleci/.nvm/nvm.sh
            nvm install 16.10.0
            nvm use 16.10.0
            rm -rf ~/.yarn
            npm install -g yarn
            which yarn
            yarn -v
      - run:
          name: Docker pull speculos + yarn install
          command: |
            source /opt/circleci/.nvm/nvm.sh
            nvm use 16.10.0
            export MAKE_NVM_SH_PATH=/opt/circleci
            # Linux docker instances start and stop quicker with `--network host`; see https://github.com/LedgerHQ/speculos/issues/249
            export MAKE_LINUX_DOCKER_OPTIONS=--network host
            make speculos_install
      - run:
          name: Build build conainer
          command: |
            git submodule update --init --recursive
            make  build_build_container
      - run:
          # todo: consider splitting the container cross-compiler upgrade step into its own step: make compiler_container
          # todo: consider upgrading CircleCI to allow caching docker images across builds to speed up the step the container cross-compiler upgrade step
          name: Build
          command: |
            make
      - run:
          # todo: consider upgrading CircleCI to allow parallel jobs, and splitting this into a separate CircleCI jobs which run in parallel on separate speculos container instances
          name: Run speculos port 5001 tests
          command: |
            source /opt/circleci/.nvm/nvm.sh
            nvm use 16.10.0
            TEST_DEBUG=1 make speculos_port_5001_test
      - run:
          # todo: consider upgrading CircleCI to allow parallel jobs, and splitting this into a separate CircleCI jobs which run in parallel on separate speculos container instances
          name: Run speculos port 5002 tests
          command: |
            source /opt/circleci/.nvm/nvm.sh
            nvm use 16.10.0
            # todo: turn the voluminous and detailed log output into a CircleCI artifact which can be downloaded if necessary, otherwise ~ 20k log lines takes many minutes to output on the CircleCI web UI
            TEST_DEBUG=1 make speculos_port_5002_test

  test_fuzz_crash_fixes:
    docker:
      - image: zondax/circleci@sha256:37f78ab294b35a055768c2305b3f13813e55fb9db4e65f72745ede61dd842c08
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: sudo apt update && sudo apt -y install clang-10
      - run:
          name: Build
          command: |
            cmake -B build \
                    -DCMAKE_C_COMPILER=clang-10 \
                    -DCMAKE_CXX_COMPILER=clang++-10 \
                    -DCMAKE_BUILD_TYPE=Debug \
                    -DENABLE_FUZZING=1 \
                    -DENABLE_SANITIZERS=1 \
                    .
            make -C build
      - run: ./run-fuzz-crashes.py

  build_package:
    docker:
      - image: zondax/builder-bolos:latest
    environment:
      - BOLOS_SDK=/home/zondax/project/deps/nanos-secure-sdk
      - BOLOS_ENV=/opt/bolos
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run:
          name: Build
          command: |
            source /home/zondax/.cargo/env
            cd /home/zondax/project
            make
      - run: /home/zondax/go/bin/ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete $(/home/zondax/project/app/pkg/zxtool.sh version) /home/zondax/project/app/pkg/zxtool.sh

workflows:
  version: 2

  default:
    jobs:
      - build
      - build_ledger
      - build_package:
          requires:
            - build
            - build_ledger
          filters:
            branches:
              only:
                - master
                - test_circle_ci_fix
